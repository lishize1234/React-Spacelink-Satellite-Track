{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\lishi\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\lishi\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import Title from\"antd/lib/typography/Title\";import React from\"react\";import{InputNumber,Form,Button,Checkbox}from\"antd\";var ObserverInfo=function ObserverInfo(props){var curLon=props.curLon,curLa=props.curLa,initialValues=props.initialValues,setInitialValues=props.setInitialValues,locationAvailable=props.locationAvailable;var onFormFinish=function onFormFinish(observerInfo){observerInfo=_objectSpread({},initialValues);props.findSatellitesOnClick(observerInfo);};var layout={labelCol:{span:8},wrapperCol:{span:24}};var tailLayout={wrapperCol:{offset:8,span:16}};var onChangeHandler=function onChangeHandler(e,name){setInitialValues(_objectSpread(_objectSpread({},initialValues),{},_defineProperty({},name,e)));};var autoFillLocation=function autoFillLocation(checked){var curLocation={\"longitude\":curLon,\"latitude\":curLa};if(checked){console.log(curLocation);}else{curLocation[\"longitude\"]=0;curLocation[\"latitude\"]=0;}setInitialValues(_objectSpread(_objectSpread({},initialValues),curLocation));};return/*#__PURE__*/React.createElement(\"div\",{className:\"observer-info-container\"},/*#__PURE__*/React.createElement(Title,{level:5},\"Observer Info\"),/*#__PURE__*/React.createElement(Checkbox,{disabled:!locationAvailable,style:{margin:\"10px\",color:\"rgb(54, 42, 88)\"},onChange:function onChange(e){return autoFillLocation(e.target.checked);}},\"Use Your Own Location\"),/*#__PURE__*/React.createElement(Form,Object.assign({},layout,{initialValues:initialValues,onFinish:onFormFinish}),/*#__PURE__*/React.createElement(Form.Item,{label:\"Longitude\",name:\"longitude\",rules:[{required:true,message:'Please enter a valid longitude!'}]},/*#__PURE__*/React.createElement(InputNumber,{min:-180,max:180,style:{width:\"40%\"},disabled:props.disabled,value:initialValues.longitude,onChange:function onChange(e){return onChangeHandler(e,\"longitude\");}}),true?null:/*#__PURE__*/React.createElement(Checkbox,{disabled:true,style:{marginLeft:\"5px\"}})),/*#__PURE__*/React.createElement(Form.Item,{label:\"Latitude\",name:\"latitude\",rules:[{required:true,message:'Please enter a valid latitude!'}]},/*#__PURE__*/React.createElement(InputNumber,{min:-90,max:90,style:{width:\"40%\"},disabled:props.disabled,value:initialValues.latitude,onChange:function onChange(e){return onChangeHandler(e,\"latitude\");}}),true?null:/*#__PURE__*/React.createElement(Checkbox,{disabled:true,style:{marginLeft:\"5px\"}})),/*#__PURE__*/React.createElement(Form.Item,{label:\"Altitude(meters)\",name:\"altitude\",rules:[{required:true,message:'Please enter a valid altitude!'}]},/*#__PURE__*/React.createElement(InputNumber,{min:-413,max:8850,style:{width:\"40%\"},disabled:props.disabled,value:initialValues.altitude,onChange:function onChange(e){return onChangeHandler(e,\"altitude\");}})),/*#__PURE__*/React.createElement(Form.Item,{label:\"Radius\",name:\"radius\",rules:[{required:true,message:'Please enter a valid radius!'}]},/*#__PURE__*/React.createElement(InputNumber,{min:0,max:90,style:{width:\"40%\"},disabled:props.disabled,value:initialValues.radius,onChange:function onChange(e){return onChangeHandler(e,\"radius\");}})),/*#__PURE__*/React.createElement(Form.Item,tailLayout,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\",disabled:props.loading||props.disabled},\"Find nearby satellites\"))));};export default ObserverInfo;","map":{"version":3,"sources":["C:/Users/lishi/my-app/src/components/ObserverInfo.js"],"names":["Title","React","InputNumber","Form","Button","Checkbox","ObserverInfo","props","curLon","curLa","initialValues","setInitialValues","locationAvailable","onFormFinish","observerInfo","findSatellitesOnClick","layout","labelCol","span","wrapperCol","tailLayout","offset","onChangeHandler","e","name","autoFillLocation","checked","curLocation","console","log","margin","color","target","required","message","width","disabled","longitude","marginLeft","latitude","altitude","radius","loading"],"mappings":"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","sourcesContent":["import Title from \"antd/lib/typography/Title\";\r\nimport React from \"react\";\r\nimport { InputNumber, Form, Button, Checkbox } from \"antd\";\r\n\r\nconst ObserverInfo = (props) => {\r\n  const {curLon, curLa, initialValues, setInitialValues, locationAvailable } = props;\r\n  const onFormFinish = (observerInfo) => {\r\n    observerInfo = {...initialValues}\r\n    props.findSatellitesOnClick(observerInfo);\r\n  }\r\n\r\n  const layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 24 },\r\n  };\r\n\r\n  const tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n  };\r\n  const onChangeHandler = (e, name) => {\r\n    setInitialValues({ ...initialValues, [name]: e })\r\n  }\r\n  const autoFillLocation = (checked) => {\r\n    let curLocation = { \"longitude\": curLon, \"latitude\": curLa };\r\n    if (checked) {\r\n      console.log(curLocation);\r\n    } else {\r\n      curLocation[\"longitude\"] = 0;\r\n      curLocation[\"latitude\"] = 0;\r\n    }\r\n    setInitialValues({ ...initialValues,...curLocation })\r\n  }\r\n\r\n  return (\r\n    <div className=\"observer-info-container\">\r\n      <Title level={5}>Observer Info</Title>\r\n      <Checkbox disabled={!locationAvailable} style={{ margin: \"10px\", color: \"rgb(54, 42, 88)\" }} \r\n        onChange={(e) => autoFillLocation(e.target.checked)} >Use Your Own Location\r\n      </Checkbox>\r\n      <Form\r\n        {...layout}\r\n        initialValues={initialValues}\r\n        onFinish={onFormFinish}\r\n      >\r\n        <Form.Item\r\n          label=\"Longitude\"\r\n          name=\"longitude\"\r\n          rules={[{ \r\n            required: true,\r\n            message: 'Please enter a valid longitude!',\r\n          }]}\r\n        >\r\n          <InputNumber min={-180} max={180} style={{ width: \"40%\" }} disabled={props.disabled} \r\n          value={initialValues.longitude} onChange={(e) => onChangeHandler(e, \"longitude\")}/>\r\n          {true ? null : <Checkbox disabled={true} style={{ marginLeft: \"5px\" }}></Checkbox>}\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Latitude\"\r\n          name=\"latitude\"\r\n          rules={[{ \r\n            required: true,\r\n            message: 'Please enter a valid latitude!',\r\n          }]}\r\n        >\r\n          <InputNumber min={-90} max={90} style={{ width: \"40%\" }} disabled={props.disabled} \r\n          value={initialValues.latitude} onChange={(e) => onChangeHandler(e, \"latitude\")}/>\r\n          {true ? null : <Checkbox disabled={true} style={{ marginLeft: \"5px\" }}  ></Checkbox>}\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Altitude(meters)\"\r\n          name=\"altitude\"\r\n          rules={[{ \r\n            required: true,\r\n            message: 'Please enter a valid altitude!',\r\n          }]}\r\n        >\r\n          <InputNumber min={-413} max={8850} style={{ width: \"40%\" }} disabled={props.disabled} value={initialValues.altitude} onChange={(e) => onChangeHandler(e, \"altitude\")}/>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Radius\"\r\n          name=\"radius\"\r\n          rules={[{ \r\n            required: true,\r\n            message: 'Please enter a valid radius!',\r\n          }]}\r\n        >\r\n          <InputNumber min={0} max={90} style={{ width: \"40%\" }} disabled={props.disabled} value={initialValues.radius} onChange={(e) => onChangeHandler(e, \"radius\")}/>\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" disabled={props.loading || props.disabled}>\r\n            Find nearby satellites\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ObserverInfo;"]},"metadata":{},"sourceType":"module"}
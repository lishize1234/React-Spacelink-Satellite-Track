{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lishi\\\\my-app\\\\src\\\\components\\\\Main.js\";\nimport React, { useState } from \"react\";\nimport { Col, Row } from \"antd\";\nimport ObserverInfo from \"./ObserverInfo\";\nimport { SAT_CATEGORY, NY20_API_KEY, NY20_BASE_URL } from \"../constants\";\nimport SatelliteList from \"./SatelliteList\";\nimport WorldMap from \"./WorldMap\";\nexport const ABOVE_API_BASE_URL = `${NY20_BASE_URL}/above`;\n\nconst Main = () => {\n  const [loading, setLoading] = useState(false);\n  const [satList, setSatList] = useState([]);\n  const [trakcing, setTracking] = useState(false);\n\n  const findSatellitesOnClick = nextObserverInfo => {\n    const {\n      longitude,\n      latitude,\n      altitude,\n      radius\n    } = nextObserverInfo;\n    setLoading(true);\n    fetch(`${ABOVE_API_BASE_URL}/${latitude}/${longitude}/${altitude}/${radius}/${SAT_CATEGORY}&apiKey=${NY20_API_KEY}`).then(response => response.json()).then(data => {\n      setSatList(data.above.map(satellite => {\n        return { ...satellite,\n          selected: false\n        };\n      }));\n      setLoading(false);\n    }).catch(() => {\n      setLoading(false);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ObserverInfo, {\n    findSatellitesOnClick: findSatellitesOnClick,\n    loading: loading,\n    disabled: trakcing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SatelliteList, {\n    satList: satList,\n    updateSatelliteList: setSatList,\n    loading: loading,\n    disabled: trakcing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    span: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WorldMap, {\n    selectedSatellites: satList.filter(sat => sat.selected),\n    onTracking: setTracking,\n    disabled: trakcing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/lishi/my-app/src/components/Main.js"],"names":["React","useState","Col","Row","ObserverInfo","SAT_CATEGORY","NY20_API_KEY","NY20_BASE_URL","SatelliteList","WorldMap","ABOVE_API_BASE_URL","Main","loading","setLoading","satList","setSatList","trakcing","setTracking","findSatellitesOnClick","nextObserverInfo","longitude","latitude","altitude","radius","fetch","then","response","json","data","above","map","satellite","selected","catch","filter","sat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,MAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,aAArC,QAA0D,cAA1D;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAO,MAAMC,kBAAkB,GAAI,GAAEH,aAAc,QAA5C;;AAEP,MAAMI,IAAI,GAAG,MAAM;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMiB,qBAAqB,GAAIC,gBAAD,IAAsB;AAClD,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,QAAvB;AAAiCC,MAAAA;AAAjC,QAA4CJ,gBAAlD;AAEAN,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAW,IAAAA,KAAK,CAAE,GAAEd,kBAAmB,IAAGW,QAAS,IAAGD,SAAU,IAAGE,QAAS,IAAGC,MAAO,IAAGlB,YAAa,WAAUC,YAAa,EAA7G,CAAL,CACGmB,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZb,MAAAA,UAAU,CAACa,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAgBC,SAAD,IAAe;AACvC,eAAO,EACL,GAAGA,SADE;AAELC,UAAAA,QAAQ,EAAE;AAFL,SAAP;AAID,OALU,CAAD,CAAV;AAMAnB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVH,EAWGoB,KAXH,CAWS,MAAM;AACXpB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAbH;AAcD,GAlBD;;AAoBA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,qBAAqB,EAAEK,qBADzB;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEF,OADX;AAEE,IAAA,mBAAmB,EAAEC,UAFvB;AAGE,IAAA,OAAO,EAAEH,OAHX;AAIE,IAAA,QAAQ,EAAEI,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,eAcE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,kBAAkB,EAAEF,OAAO,CAACoB,MAAR,CAAeC,GAAG,IAAIA,GAAG,CAACH,QAA1B,CADtB;AAEE,IAAA,UAAU,EAAEf,WAFd;AAGE,IAAA,QAAQ,EAAED,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAdF,CADF;AAwBD,CAjDD;;AAmDA,eAAeL,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Col, Row } from \"antd\";\r\nimport ObserverInfo from \"./ObserverInfo\";\r\nimport { SAT_CATEGORY, NY20_API_KEY, NY20_BASE_URL } from \"../constants\";\r\nimport SatelliteList from \"./SatelliteList\";\r\nimport WorldMap from \"./WorldMap\";\r\n\r\nexport const ABOVE_API_BASE_URL = `${NY20_BASE_URL}/above`;\r\n\r\nconst Main = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [satList, setSatList] = useState([]);\r\n  const [trakcing, setTracking] = useState(false);\r\n\r\n  const findSatellitesOnClick = (nextObserverInfo) => {\r\n    const { longitude, latitude, altitude, radius } = nextObserverInfo;\r\n\r\n    setLoading(true);\r\n    fetch(`${ABOVE_API_BASE_URL}/${latitude}/${longitude}/${altitude}/${radius}/${SAT_CATEGORY}&apiKey=${NY20_API_KEY}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setSatList(data.above.map((satellite) => {\r\n          return {\r\n            ...satellite,\r\n            selected: false,\r\n          }\r\n        }));\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={8}>\r\n        <ObserverInfo \r\n          findSatellitesOnClick={findSatellitesOnClick}\r\n          loading={loading}\r\n          disabled={trakcing}\r\n        />\r\n        <SatelliteList \r\n          satList={satList}\r\n          updateSatelliteList={setSatList}\r\n          loading={loading}\r\n          disabled={trakcing}\r\n        />\r\n      </Col>\r\n      <Col span={16}>\r\n        <WorldMap \r\n          selectedSatellites={satList.filter(sat => sat.selected)}\r\n          onTracking={setTracking}\r\n          disabled={trakcing}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}
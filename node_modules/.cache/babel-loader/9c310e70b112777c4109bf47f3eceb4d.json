{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\lishi\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React from\"react\";import Title from\"antd/lib/typography/Title\";import{List,Checkbox,Avatar}from\"antd\";import satelliteImage from\"../images/satellite.svg\";var SatelliteList=function SatelliteList(_ref){var satList=_ref.satList,updateSatelliteList=_ref.updateSatelliteList,loading=_ref.loading,disabled=_ref.disabled;var onSelectionChange=function onSelectionChange(checked,targetSatllite){var nextSatlliteList=satList.map(function(satllite){if(satllite.satid===targetSatllite.satid){return _objectSpread(_objectSpread({},satllite),{},{selected:checked});}else{return _objectSpread({},satllite);}});updateSatelliteList(nextSatlliteList);};return/*#__PURE__*/React.createElement(\"div\",{className:\"satellite-list-container\"},/*#__PURE__*/React.createElement(Title,{level:5},\"Nearby Satellites (\",satList?satList.length:0,\")\"),/*#__PURE__*/React.createElement(\"p\",null,\"Select the satellites you wanna track on the world map at the right side\"),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(List,{className:\"sat-list\",itemLayout:\"horizontal\",dataSource:satList,loading:loading,renderItem:function renderItem(item){return/*#__PURE__*/React.createElement(List.Item,{actions:[/*#__PURE__*/React.createElement(Checkbox,{onChange:function onChange(e){return onSelectionChange(e.target.checked,item);},checked:item.selected,disabled:disabled})]},/*#__PURE__*/React.createElement(List.Item.Meta,{avatar:/*#__PURE__*/React.createElement(Avatar,{src:satelliteImage,size:\"large\",alt:\"satellite\"}),title:/*#__PURE__*/React.createElement(\"p\",null,item.satname),description:\"Launch Date: \".concat(item.launchDate)}));}}));};export default SatelliteList;","map":{"version":3,"sources":["C:/Users/lishi/my-app/src/components/SatelliteList.js"],"names":["React","Title","List","Checkbox","Avatar","SatelliteList","satList","updateSatelliteList","loading","disabled","onSelectionChange","checked","targetSatllite","nextSatlliteList","map","satllite","satid","selected","length","item","e","target","satelliteImage","satname","launchDate"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,MAAzB,KAAuC,MAAvC,C,oDAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAKhB,IAJJC,CAAAA,OAII,MAJJA,OAII,CAHJC,mBAGI,MAHJA,mBAGI,CAFJC,OAEI,MAFJA,OAEI,CADJC,QACI,MADJA,QACI,CACJ,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,OAAD,CAAUC,cAAV,CAA6B,CACrD,GAAMC,CAAAA,gBAAgB,CAAGP,OAAO,CAACQ,GAAR,CAAY,SAACC,QAAD,CAAc,CACjD,GAAIA,QAAQ,CAACC,KAAT,GAAmBJ,cAAc,CAACI,KAAtC,CAA6C,CAC3C,sCACKD,QADL,MAEEE,QAAQ,CAAEN,OAFZ,GAID,CALD,IAMK,CACH,wBACKI,QADL,EAGD,CACF,CAZwB,CAAzB,CAcAR,mBAAmB,CAACM,gBAAD,CAAnB,CACD,CAhBD,CAkBA,mBACE,2BAAK,SAAS,CAAC,0BAAf,eACE,oBAAC,KAAD,EAAO,KAAK,CAAE,CAAd,wBAAqCP,OAAO,CAAEA,OAAO,CAACY,MAAV,CAAmB,CAA/D,KADF,cAEE,wGAFF,cAGE,8BAHF,cAIE,oBAAC,IAAD,EACE,SAAS,CAAC,UADZ,CAEE,UAAU,CAAC,YAFb,CAGE,UAAU,CAAEZ,OAHd,CAIE,OAAO,CAAEE,OAJX,CAKE,UAAU,CAAG,oBAAAW,IAAI,qBACb,oBAAC,IAAD,CAAM,IAAN,EACE,OAAO,CAAE,cAAC,oBAAC,QAAD,EAAU,QAAQ,CAAE,kBAACC,CAAD,QAAOV,CAAAA,iBAAiB,CAACU,CAAC,CAACC,MAAF,CAASV,OAAV,CAAmBQ,IAAnB,CAAxB,EAApB,CAAsE,OAAO,CAAEA,IAAI,CAACF,QAApF,CAA8F,QAAQ,CAAER,QAAxG,EAAD,CADX,eAEI,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX,EACE,MAAM,cAAE,oBAAC,MAAD,EAAQ,GAAG,CAAEa,cAAb,CAA6B,IAAI,CAAC,OAAlC,CAA0C,GAAG,CAAC,WAA9C,EADV,CAEE,KAAK,cAAE,6BAAIH,IAAI,CAACI,OAAT,CAFT,CAGE,WAAW,wBAAkBJ,IAAI,CAACK,UAAvB,CAHb,EAFJ,CADa,EALnB,EAJF,CADF,CAuBD,CA/CD,CAiDA,cAAenB,CAAAA,aAAf","sourcesContent":["import React from \"react\";\r\nimport Title from \"antd/lib/typography/Title\";\r\nimport { List, Checkbox, Avatar } from \"antd\";\r\nimport satelliteImage from '../images/satellite.svg';\r\n\r\nconst SatelliteList = ({\r\n  satList,\r\n  updateSatelliteList,\r\n  loading,\r\n  disabled\r\n}) => {\r\n  const onSelectionChange = (checked, targetSatllite) => {\r\n    const nextSatlliteList = satList.map((satllite) => {\r\n      if (satllite.satid === targetSatllite.satid) {\r\n        return {\r\n          ...satllite,\r\n          selected: checked\r\n        }\r\n      }\r\n      else {\r\n        return {\r\n          ...satllite\r\n        }\r\n      }\r\n    });\r\n\r\n    updateSatelliteList(nextSatlliteList);\r\n  }\r\n\r\n  return (\r\n    <div className=\"satellite-list-container\">\r\n      <Title level={5}>Nearby Satellites ({satList? satList.length : 0})</Title>\r\n      <p>Select the satellites you wanna track on the world map at the right side</p>\r\n      <hr/>\r\n      <List \r\n        className=\"sat-list\"\r\n        itemLayout=\"horizontal\"\r\n        dataSource={satList}\r\n        loading={loading}\r\n        renderItem={ item => (\r\n            <List.Item \r\n              actions={[<Checkbox onChange={(e) => onSelectionChange(e.target.checked, item)} checked={item.selected} disabled={disabled} />]}>\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src={satelliteImage} size=\"large\" alt=\"satellite\"/>}\r\n                  title={<p>{item.satname}</p>}\r\n                  description={`Launch Date: ${item.launchDate}`}\r\n                />\r\n            </List.Item>\r\n        )}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SatelliteList;"]},"metadata":{},"sourceType":"module"}
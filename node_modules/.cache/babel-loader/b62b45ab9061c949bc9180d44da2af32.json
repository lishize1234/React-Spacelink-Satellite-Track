{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\lishi\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\lishi\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{Col,Row}from\"antd\";import ObserverInfo from\"./ObserverInfo\";import{SAT_CATEGORY,NY20_API_KEY,NY20_BASE_URL}from\"../constants\";import SatelliteList from\"./SatelliteList\";import WorldMap from\"./WorldMap\";export var ABOVE_API_BASE_URL=\"\".concat(NY20_BASE_URL,\"/above\");var Main=function Main(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),satList=_useState4[0],setSatList=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),trakcing=_useState6[0],setTracking=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),observerInfo=_useState8[0],setObserverInfo=_useState8[1];var findSatellitesOnClick=function findSatellitesOnClick(nextObserverInfo){setObserverInfo(nextObserverInfo);var longitude=nextObserverInfo.longitude,latitude=nextObserverInfo.latitude,altitude=nextObserverInfo.altitude,radius=nextObserverInfo.radius;setLoading(true);fetch(\"\".concat(ABOVE_API_BASE_URL,\"/\").concat(latitude,\"/\").concat(longitude,\"/\").concat(altitude,\"/\").concat(radius,\"/\").concat(SAT_CATEGORY,\"&apiKey=\").concat(NY20_API_KEY)).then(function(response){return response.json();}).then(function(data){setSatList(data.above.map(function(satellite){return _objectSpread(_objectSpread({},satellite),{},{selected:false});}));setLoading(false);}).catch(function(){setLoading(false);});};return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{span:8},/*#__PURE__*/React.createElement(ObserverInfo,{findSatellitesOnClick:findSatellitesOnClick,loading:loading,disabled:trakcing}),/*#__PURE__*/React.createElement(SatelliteList,{satList:satList,updateSatelliteList:setSatList,loading:loading,disabled:trakcing})),/*#__PURE__*/React.createElement(Col,{span:16},/*#__PURE__*/React.createElement(WorldMap,{selectedSatellites:satList.filter(function(sat){return sat.selected;}),onTracking:setTracking,disabled:trakcing,observerInfo:observerInfo})));};export default Main;","map":{"version":3,"sources":["C:/Users/lishi/my-app/src/components/Main.js"],"names":["React","useState","Col","Row","ObserverInfo","SAT_CATEGORY","NY20_API_KEY","NY20_BASE_URL","SatelliteList","WorldMap","ABOVE_API_BASE_URL","Main","loading","setLoading","satList","setSatList","trakcing","setTracking","observerInfo","setObserverInfo","findSatellitesOnClick","nextObserverInfo","longitude","latitude","altitude","radius","fetch","then","response","json","data","above","map","satellite","selected","catch","filter","sat"],"mappings":"uSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,MAAzB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,YAAT,CAAuBC,YAAvB,CAAqCC,aAArC,KAA0D,cAA1D,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,WAAMH,aAAN,UAAxB,CAEP,GAAMI,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,eACaV,QAAQ,CAAC,KAAD,CADrB,wCACVW,OADU,eACDC,UADC,8BAEaZ,QAAQ,CAAC,EAAD,CAFrB,yCAEVa,OAFU,eAEDC,UAFC,8BAGed,QAAQ,CAAC,KAAD,CAHvB,yCAGVe,QAHU,eAGAC,WAHA,8BAIuBhB,QAAQ,CAAC,EAAD,CAJ/B,yCAIViB,YAJU,eAIIC,eAJJ,eAMjB,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,gBAAD,CAAsB,CAClDF,eAAe,CAACE,gBAAD,CAAf,CADkD,GAE1CC,CAAAA,SAF0C,CAEAD,gBAFA,CAE1CC,SAF0C,CAE/BC,QAF+B,CAEAF,gBAFA,CAE/BE,QAF+B,CAErBC,QAFqB,CAEAH,gBAFA,CAErBG,QAFqB,CAEXC,MAFW,CAEAJ,gBAFA,CAEXI,MAFW,CAIlDZ,UAAU,CAAC,IAAD,CAAV,CACAa,KAAK,WAAIhB,kBAAJ,aAA0Ba,QAA1B,aAAsCD,SAAtC,aAAmDE,QAAnD,aAA+DC,MAA/D,aAAyEpB,YAAzE,oBAAgGC,YAAhG,EAAL,CACGqB,IADH,CACQ,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADhB,EAEGF,IAFH,CAEQ,SAAAG,IAAI,CAAI,CACZf,UAAU,CAACe,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,SAACC,SAAD,CAAe,CACvC,sCACKA,SADL,MAEEC,QAAQ,CAAE,KAFZ,GAID,CALU,CAAD,CAAV,CAMArB,UAAU,CAAC,KAAD,CAAV,CACD,CAVH,EAWGsB,KAXH,CAWS,UAAM,CACXtB,UAAU,CAAC,KAAD,CAAV,CACD,CAbH,EAcD,CAnBD,CAqBA,mBACE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,IAAI,CAAE,CAAX,eACE,oBAAC,YAAD,EACE,qBAAqB,CAAEO,qBADzB,CAEE,OAAO,CAAER,OAFX,CAGE,QAAQ,CAAEI,QAHZ,EADF,cAME,oBAAC,aAAD,EACE,OAAO,CAAEF,OADX,CAEE,mBAAmB,CAAEC,UAFvB,CAGE,OAAO,CAAEH,OAHX,CAIE,QAAQ,CAAEI,QAJZ,EANF,CADF,cAcE,oBAAC,GAAD,EAAK,IAAI,CAAE,EAAX,eACE,oBAAC,QAAD,EACE,kBAAkB,CAAEF,OAAO,CAACsB,MAAR,CAAe,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACH,QAAR,EAAlB,CADtB,CAEE,UAAU,CAAEjB,WAFd,CAGE,QAAQ,CAAED,QAHZ,CAIE,YAAY,CAAEE,YAJhB,EADF,CAdF,CADF,CAyBD,CApDD,CAsDA,cAAeP,CAAAA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Col, Row } from \"antd\";\r\nimport ObserverInfo from \"./ObserverInfo\";\r\nimport { SAT_CATEGORY, NY20_API_KEY, NY20_BASE_URL } from \"../constants\";\r\nimport SatelliteList from \"./SatelliteList\";\r\nimport WorldMap from \"./WorldMap\";\r\n\r\nexport const ABOVE_API_BASE_URL = `${NY20_BASE_URL}/above`;\r\n\r\nconst Main = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [satList, setSatList] = useState([]);\r\n  const [trakcing, setTracking] = useState(false);\r\n  const [observerInfo, setObserverInfo] = useState({});\r\n\r\n  const findSatellitesOnClick = (nextObserverInfo) => {\r\n    setObserverInfo(nextObserverInfo);\r\n    const { longitude, latitude, altitude, radius } = nextObserverInfo;\r\n\r\n    setLoading(true);\r\n    fetch(`${ABOVE_API_BASE_URL}/${latitude}/${longitude}/${altitude}/${radius}/${SAT_CATEGORY}&apiKey=${NY20_API_KEY}`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setSatList(data.above.map((satellite) => {\r\n          return {\r\n            ...satellite,\r\n            selected: false,\r\n          }\r\n        }));\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col span={8}>\r\n        <ObserverInfo \r\n          findSatellitesOnClick={findSatellitesOnClick}\r\n          loading={loading}\r\n          disabled={trakcing}\r\n        />\r\n        <SatelliteList \r\n          satList={satList}\r\n          updateSatelliteList={setSatList}\r\n          loading={loading}\r\n          disabled={trakcing}\r\n        />\r\n      </Col>\r\n      <Col span={16}>\r\n        <WorldMap \r\n          selectedSatellites={satList.filter(sat => sat.selected)}\r\n          onTracking={setTracking}\r\n          disabled={trakcing}\r\n          observerInfo={observerInfo}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}